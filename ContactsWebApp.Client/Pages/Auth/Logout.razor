@page "/logout"
@inject ILocalStorageService localStorage
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager navigationManager
@inject HttpClient httpClient

@code {
    async override protected Task OnInitializedAsync()
    {
        await localStorage.RemoveItemAsync("token");
        await localStorage.RemoveItemAsync("email");
        await localStorage.RemoveItemAsync("Name");
        await localStorage.RemoveItemAsync("Surname");

        (authenticationStateProvider as AuthStateProvider)!.NotifyUserLogout();

        httpClient.DefaultRequestHeaders.Authorization = null;

        navigationManager.NavigateTo("/login");
    }
}
